#version 430

layout(push_constant) uniform params {
    uint len;
} PushConstant;

layout(std430, binding = 0) buffer Source
{
    float source[];
};

layout(std430, binding = 1) buffer Target
{
    float target[];
};

const int KERNEL_SIZE = 7;

void main()
{
    uint idx = gl_GlobalInvocationID.x;

    if (idx < PushConstant.len) {
        float sum = 0.0f;

        for (int offset = -KERNEL_SIZE / 2; offset <= KERNEL_SIZE / 2; offset++) {
            int i = int(idx) + offset;

            if (i >= 0 && i < PushConstant.len) {
                sum += source[i];
            }
        }

        target[idx] = sum / float(KERNEL_SIZE);
    }
}